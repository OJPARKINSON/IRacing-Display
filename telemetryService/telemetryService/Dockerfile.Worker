FROM mcr.microsoft.com/dotnet/sdk:8.0 AS build
WORKDIR /src

# Copy solution and project files
COPY telemetryService.sln .
COPY src/TelemetryService.Worker/TelemetryService.Worker.csproj src/TelemetryService.Worker/
COPY src/TelemetryService.Domain/TelemetryService.Domain.csproj src/TelemetryService.Domain/
COPY src/TelemetryService.Application/TelemetryService.Application.csproj src/TelemetryService.Application/
COPY src/TelemetryService.Infrastructure/TelemetryService.Infrastructure.csproj src/TelemetryService.Infrastructure/

# Restore dependencies
RUN dotnet restore src/TelemetryService.Worker/TelemetryService.Worker.csproj

# Copy source code
COPY . .

# Build and publish the Worker service
RUN dotnet publish src/TelemetryService.Worker/TelemetryService.Worker.csproj \
    -c Release \
    -o /app/publish \
    --no-restore

# Runtime stage
FROM mcr.microsoft.com/dotnet/aspnet:8.0-alpine AS runtime
WORKDIR /app

# Create non-root user
RUN addgroup -g 1001 -S dotnet && \
    adduser -S dotnet -u 1001 -G dotnet

# Copy published app
COPY --from=build --chown=dotnet:dotnet /app/publish .

USER dotnet

# Environment configuration for better memory management
ENV DOTNET_RUNNING_IN_CONTAINER=true \
    DOTNET_SYSTEM_GLOBALIZATION_INVARIANT=1 \
    DOTNET_GCRetainVM=0 \
    DOTNET_GCConserveMemory=1 \
    DOTNET_GCHeapHardLimit=5368709120

ENTRYPOINT ["dotnet", "TelemetryService.Worker.dll"]