services:
  rabbitMQ:
    container_name: rabbitMQ
    image: rabbitmq:4.0-management
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - ./rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf
      - rabbitmq-data:/var/lib/rabbitmq
    healthcheck:
      test: [ "CMD", "rabbitmq-diagnostics", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s
    networks:
      - telemetry-network
    restart: always
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest

  telemetry_service:
    build: ./telemetryService/telemetryService
    container_name: telemetry_service
    restart: on-failure
    depends_on:
      rabbitMQ:
        condition: service_healthy
    ports:
      - "5000:5000"
    networks:
      - telemetry-network
    environment:
      QUESTDB_URL: ${QUESTDB_URL}
      DOTNET_ENVIRONMENT: Development
      ASPNETCORE_URLS: http://+:5000
      DOTNET_GCRetainVM: 1
      DOTNET_SYSTEM_GLOBALIZATION_INVARIANT: 1
    shm_size: 256m
    labels:
      com.centurylinklabs.watchtower.enable: "true"

  telemetry-dashboard:
    build:
      context: dashboard/
      dockerfile: Dockerfile
    container_name: telemetry-dashboard
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      QUESTDB_HOST: questdb
      QUESTDB_PORT: 8812
      QUESTDB_USER: admin
      QUESTDB_PASSWORD: quest
      QUESTDB_DATABASE: qdb
      NODE_ENV: production
      NEXT_PUBLIC_APP_URL: http://localhost:3000
    networks:
      - telemetry-network
    shm_size: 256m

  questdb:
    image: questdb/questdb:latest
    container_name: questdb
    restart: unless-stopped
    ports:
      - "9000:9000"
      - "8812:8812"
    volumes:
      - questdb-data:/root/.questdb
    extra_hosts:
      - "host.docker.internal:host-gateway"
    healthcheck:
      test: ["CMD-SHELL", "timeout 5 bash -c '</dev/tcp/localhost/8812' || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    networks:
      - telemetry-network

  watchtower:
    image: containrrr/watchtower
    container_name: watchtower
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: --interval 120 --cleanup --label-enable
    environment:
      - WATCHTOWER_NOTIFICATIONS=shoutrrr
      - WATCHTOWER_NOTIFICATION_URL=generic://?template=text
      - TZ=Europe/London
      - WATCHTOWER_HTTP_API_TOKEN=${WATCHTOWER_DOCKER_TOKEN}

volumes:
  rabbitmq-data:
  questdb-data:


networks:
  telemetry-network:
    external: true
