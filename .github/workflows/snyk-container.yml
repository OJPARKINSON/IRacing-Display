name: Build and Scan Containers

on:
  push:
    branches: [ main ]

permissions:
  contents: read
  packages: write
  security-events: write

jobs:
  display:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Build image
      run: docker buildx build --platform linux/arm64 -t iracing-display ./dashboard/
    
    - name: Scan with Snyk
      uses: snyk/actions/docker@master
      continue-on-error: true
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        image: iracing-display
        args: --sarif-file-output=snyk.sarif --severity-threshold=high
    
    - name: Upload scan results
      uses: github/codeql-action/upload-sarif@v3
      if: hashFiles('snyk.sarif') != ''
      with:
        sarif_file: snyk.sarif
    
    - name: Push to registry
      run: |
        echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
        IMAGE_ID=ghcr.io/${{ github.repository_owner }}/iracing-display
        IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
        docker tag iracing-display $IMAGE_ID:latest
        docker push $IMAGE_ID:latest

  telemetryService:
    runs-on: ubuntu-24.04-arm
    steps:
    - uses: actions/checkout@v4
    
    - name: Build image
      run: docker buildx build --platform linux/arm64 -t iracing-telemetryservice ./telemetryService/telemetryService/
    
    - name: Scan with Snyk
      uses: snyk/actions/docker@master
      continue-on-error: true
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        image: iracing-telemetryservice
        args: --sarif-file-output=snyk.sarif --severity-threshold=high
    
    - name: Upload scan results
      uses: github/codeql-action/upload-sarif@v3
      if: hashFiles('snyk.sarif') != ''
      with:
        sarif_file: snyk.sarif
    
    - name: Push to registry
      run: |
        echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
        IMAGE_ID=ghcr.io/${{ github.repository_owner }}/iracing-telemetryservice
        IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
        docker tag iracing-telemetryservice $IMAGE_ID:latest
        docker push $IMAGE_ID:latest