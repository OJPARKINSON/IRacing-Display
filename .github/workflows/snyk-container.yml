# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# A sample workflow which checks out the code, builds a container
# image using Docker and scans that image for vulnerabilities using
# Snyk. The results are then uploaded to GitHub Security Code Scanning

name: Snyk Container

on:
  push:
    branches: [ main ]

permissions:
  packages: write
  contents: read

jobs:
  snyk-display:
    permissions:
      packages: write
      contents: read # for actions/checkout to fetch code
      security-events: write # for github/codeql-action/upload-sarif to upload SARIF results
      actions: read # only required for a private repository by github/codeql-action/upload-sarif to get the Action run status
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Log in to registry
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
    
    - name: Build a Docker image
      run: docker build -t iracing-display ./dashboard/
    
    - name: Run Snyk to check Docker image for vulnerabilities
      # Snyk can be used to break the build when it detects vulnerabilities.
      # In this case we want to upload the issues to GitHub Code Scanning
      uses: snyk/actions/docker@master
      continue-on-error: true
      env:
        # In order to use the Snyk Action you will need to have a Snyk API token.
        # More details in https://github.com/snyk/actions#getting-your-snyk-token
        # or you can signup for free at https://snyk.io/login
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        image: iracing-display  # Scan the locally built image, not the remote one
        args: --file=./dashboard/Dockerfile --sarif-file-output=snyk.sarif
    
    - name: Upload result to GitHub Code Scanning
      uses: github/codeql-action/upload-sarif@v3
      if: always()  # Upload even if Snyk scan fails
      with:
        sarif_file: snyk.sarif

  push-display:
    runs-on: ubuntu-latest
    needs: snyk-display
    permissions:
      packages: write
      contents: read

    steps:
      - uses: actions/checkout@v4
      - name: Build image
        run: docker build ./dashboard/ --file Dockerfile --tag iracing-display --label "runnumber=${GITHUB_RUN_ID}"
      - name: Log in to registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
      - name: Push image
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository_owner }}/iracing-display
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
  
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
  
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
  
          [ "$VERSION" == "main" ] && VERSION=latest
          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION
          docker tag iracing-display $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION

  snyk-telemetryservice:
    permissions:
      packages: write
      contents: read # for actions/checkout to fetch code
      security-events: write # for github/codeql-action/upload-sarif to upload SARIF results
      actions: read # only required for a private repository by github/codeql-action/upload-sarif to get the Action run status
    runs-on: ubuntu-24.04-arm  # Keep ARM runner for ARM64 builds
    steps:
    - uses: actions/checkout@v4
    
    - name: Log in to registry
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
    
    - name: Build a Docker image
      run: docker build -t iracing-telemetryservice ./telemetryService/telemetryService/
    
    - name: Run Snyk to check Docker image for vulnerabilities
      # Snyk can be used to break the build when it detects vulnerabilities.
      # In this case we want to upload the issues to GitHub Code Scanning
      uses: snyk/actions/docker@master
      continue-on-error: true
      env:
        # In order to use the Snyk Action you will need to have a Snyk API token.
        # More details in https://github.com/snyk/actions#getting-your-snyk-token
        # or you can signup for free at https://snyk.io/login
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        image: iracing-telemetryservice  # Scan the locally built image, not the remote one
        args: --file=./telemetryService/telemetryService/Dockerfile --sarif-file-output=snyk.sarif
    
    - name: Upload result to GitHub Code Scanning
      uses: github/codeql-action/upload-sarif@v3
      if: always()  # Upload even if Snyk scan fails
      with:
        sarif_file: snyk.sarif

  push-telemetryservice:
    runs-on: ubuntu-24.04-arm  # Keep ARM runner for ARM64 builds
    needs: snyk-telemetryservice
    permissions:
      packages: write
      contents: read

    steps:
      - uses: actions/checkout@v4
      - name: Build image
        run: docker build ./telemetryService/telemetryService/ --file Dockerfile --tag iracing-telemetryservice --label "runnumber=${GITHUB_RUN_ID}"
      - name: Log in to registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
      - name: Push image
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository_owner }}/iracing-telemetryservice
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
  
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
  
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
  
          [ "$VERSION" == "main" ] && VERSION=latest
          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION
          docker tag iracing-telemetryservice $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION